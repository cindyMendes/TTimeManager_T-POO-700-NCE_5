services:
  backend:
    build: 
      context: ./time_manager
    container_name: time_manager_backend
    ports:
      - "4000:4000"
    environment:
      MIX_ENV: prod
      DATABASE_URL: ecto://postgres:postgres@db/time_manager_dev
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      SECRET_KEY_BASE: "ycynbOktJ7zgIZrpJPGX2R9vLz9AcM2gKhxh6mjHPo8/wbIDU/Cd4A2ACvIXP7QI"
    volumes:
      - ./time_manager:/app
    depends_on:
      - db
    networks:
      - app_network

  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: time_manager_dev
    ports:
      - "5432:5432"
    networks:
      - app_network

  frontend:
    build:
      context: ./client
    container_name: time_manager_frontend
    ports:
      - "8080:8080"
    networks:
      - app_network
    volumes:
      - ./client:/app

  pgadmin:
    image: dpage/pgadmin4:latest  
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com  
      PGADMIN_DEFAULT_PASSWORD: admin  
    ports:
      - "5050:80" 
    depends_on:
      - db  # Wait for the database to be up
    networks:
      - app_network


networks:
  app_network:
    driver: bridge
