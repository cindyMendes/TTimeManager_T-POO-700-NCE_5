apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        env:
        - name: POSTGRES_DB
          value: "postgres"
        - name: POSTGRES_USER
          valueFrom: 
            secretKeyRef:
              name: postgres-secret
              key: postgres_default_username
        - name: POSTGRES_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: postgres-secret
              key: postgres_default_password
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  type: ClusterIP
  ports:
  - port: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elixir-backend

spec:
  replicas: 1
  selector:
    matchLabels:
      app: elixir-backend
  template:
    metadata:
      labels:
        app: elixir-backend
    spec:
      containers:
      - name: elixir-backend
        image: elixir-app:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 4000
        env:
          - name: DB_HOST
            value: "postgres"
          - name: DB_PORT
            value: "5432"
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: postgres_default_username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: postgres_default_password
          - name: DATABASE_URL
            value: "ecto://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/postgres"
          - name: API_URL
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: API_URL
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
      initContainers:
      - name: wait-for-postgres
        image: busybox
        command: ['sh', '-c', 'until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: elixir-backend
spec:
  type: ClusterIP
  ports:
  - port: 4000
    targetPort: 4000
  selector:
    app: elixir-backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vuejs-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vuejs-frontend
  template:
    metadata:
      labels:
        app: vuejs-frontend
    spec:
      containers:
      - name: vuejs-frontend
        image: vuejs-app:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
          - name: VUE_APP_API_URL
            value: "http://elixir-backend:4000"
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: vuejs-frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: vuejs-frontend
