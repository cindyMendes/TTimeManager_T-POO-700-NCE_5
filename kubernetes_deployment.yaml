apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "postgres"
        ports:
        - containerPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  type: ClusterIP
  ports:
  - port: 5432
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elixir-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elixir-backend
  template:
    metadata:
      labels:
        app: elixir-backend
    spec:
      containers:
      - name: elixir-backend
        image: elixir-app:latest
        ports:
        - containerPort: 4000
        env:
        - name: DATABASE_URL
          value: "postgresql://postgres:postgres@postgres:5432/postgres"
      initContainers:
      - name: wait-for-postgres
        image: busybox
        command: ['sh', '-c', 'until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: elixir-backend
spec:
  type: ClusterIP
  ports:
  - port: 4000
  selector:
    app: elixir-backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vuejs-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vuejs-frontend
  template:
    metadata:
      labels:
        app: vuejs-frontend
    spec:
      containers:
      - name: vuejs-frontend
        image: vuejs-app:latest
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: vuejs-frontend
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: vuejs-frontend
